Homework #2 Extra Credit: 
Write and execute a program to create a container. (15 points)

Write a program to interact with name spaces and control groups (cgroup v1).

You can start with Liz Rice's Golang code in https://github.com/lizrice/containers-from-scratch (Links to an external site.) or write your own from scratch using any language (C language is a typical alternative).

You will need root permissions for this to work.  I've found that Ubuntu 20.04 works well.

Also note that the Go code uses some syscall definitions that are only available when with the environment variable GOOS=linux  ($ export GOOS=linux).

 


Give your program's process the following 5 namespaces: mnt, pid, uts, net and user.  (Optionally set ipc.)

Set up a cgroup v1 (/sys/fs/cgroup) for cpuset, pids, and memory.

Make sure your process has a separate /proc/<process-id/ns from the parent process it forked from.

For the problems below you can use /bin/bash as your container's PID 1 process.

 


Problem 1.
Demonstrate mounting another file system within a mnt namespace.

1. mkdir -p /tmp/hw3/home/test
2. Then within a mnt namespace do the following: mount --rbind /home/ubuntu /tmp/hw3/home/test
3. Show that while inside the mnt namespace you can access the /home/ubuntu files in  /tmp/hw3/home/test. But outside it you cannot access /tmp/hw3/home/test.

 


Problem 2:
Establish a user namespace as an unprivileged user with a root user within it.
Note that you can use the "whoami" both inside and outside the user namespace to show your results. 

 


Problem 3:
Demonstrate that the net namespace prevents access to the Internet.
Demonstrate using "curl icanhazip.com" both inside and outside the namespace.

 


Problem 4:
1. Within the container code set the hostname to DOCKERCLASS.
2. Demonstrate with the /bin/bash process inside the container that the hostname has changed.  

 


Problem 5:
1. Create a cgroup called "hw3" under pids resource (/sys/fs/cgroup/pids/)
2. Set the maximum pids allowed per process in this "hw3" cgroup to 10 .
4. Move the pid for it into the "hw3" cgroup.
5. Inside the container run the fork bomb ":(){ :|:& };:" without the double quote marks.
6. Submit the resulting text from within the containers.
Also submit the "ps aux" (or "ps fax") output text from outside the container.